## Landsat Harney Input File
[INPUTS]

year = 2015
tile_list = p043r030
project_folder = D:\pymetric\example

## Monte Carlo
monte_carlo_flag = True
etrf_training_path = D:\pymetric\misc\etrf_training_test.csv

## Interpolator
interpolate_folder = ET
interpolate_rasters_flag = True
interpolate_tables_flag = True

## ETrF (optional, if not set will default to current project/year)
# etrf_input_folder = D:\pymetric\example\2015

## Interpolator study area (for rasters interpolator)
## Output projection will be inherited from study_area_path
## If study_area_mask_flag, convert to raster and mask values outside study area features
## If not study_area_mask_flag, set raster output extent and spat. ref from study_area_path
## Overriding the output projection with study_area_proj is not currently supported
## The study_area_buffer is currently only applied to the extent, not the features
## The buffer can be positive or negative (in or out) with units are in the output projection
study_area_path = D:\pymetric\example\study_area\harney_wgs84z11.shp
study_area_mask_flag = True
study_area_snap = 15, 15
study_area_cellsize = 30
# study_area_buffer = 0
# study_area_proj = None

## Interpolator zones (for tables interpolator)
## Output raster properties will be be inherited from 1) zones_mask or 2) set separately
## Output projection will be inherited from 1) zones_mask, 2) zones_proj, or 3) zones_path
## zones_proj can be EPSG, PROJ4, or WKT
## If set, zones_mask values of 0 or nodata will be excluded from zonal statistics
## Zones can be buffered in or out, units are in the output projection
zones_path = D:\pymetric\example\fields\fields_2016_wgs84z11.shp
zones_name_field = FID
zones_snap = 15, 15
zones_cellsize = 30

## INI flags
metric_flag = True

## Path/row control flags
landsat_flag = True
dem_flag = True
nlcd_flag = True
cdl_flag = True
landfire_flag = True
field_flag = True

## Scene control flags
calc_refl_toa_flag = True
calc_refl_toa_qa_flag = True
# calc_refl_sur_ledaps_flag = False
# calc_refl_sur_qa_flag = False
calc_ts_bt_flag = True
## Use QA band to set common area
## Fmask cloud, shadow, & snow pixels will be removed from common area
calc_fmask_common_flag = True
fmask_erode_flag = True
fmask_erode_cells = 1
fmask_buffer_flag = True
fmask_buffer_cells = 2
## Extract separate Fmask rasters
calc_fmask_flag = True
calc_fmask_cloud_flag = False
calc_fmask_snow_flag = False
calc_fmask_water_flag = False
## Apply user cloud masks
cloud_mask_flag = True
cloud_mask_ws = D:\pymetric\example\cloud_masks
## Keep raw Landsat DN, LEDAPS, and Fmask rasters
keep_dn_flag = True
keep_qa_flag = True
## Hourly/daily weather data for METRIC
calc_metric_ea_flag = True
calc_metric_wind_flag = True
calc_metric_etr_flag = True
calc_metric_tair_flag = False
## Daily soil water balance Ke
calc_swb_ke_flag = False

## Path/row inputs
footprint_path = D:\pymetric\landsat\footprints\wrs2_descending.shp
keep_list_path = D:\pymetric\example\landsat\clear_scenes.txt
# skip_list_path = D:\pymetric\example\landsat\cloudy_scenes.txt

## NLDAS or REFET
metric_hourly_weather = NLDAS

## METRIC hourly weather data
metric_ea_input_folder = D:\pymetric\nldas\ea
metric_wind_input_folder = D:\pymetric\nldas\wind
metric_etr_input_folder = D:\pymetric\nldas\etr
metric_tair_input_folder = D:\pymetric\nldas\tair
metric_hourly_re = (?P<VAR>\w+)_(?P<YYYYMMDD>\d{8})_hourly_(?P<GRID>\w+).img$
metric_daily_re = (?P<VAR>\w+)_(?P<YYYYMMDD>\d{8})_(?!hourly_)(?P<GRID>\w+).img$
## RefET station data per path/row
# refet_params_path = D:\pymetric\refet\refet_path_row_inputs_windows.csv

## Round weather arrays to N digits to save space
rounding_digits = 3

## Interpolator and soil water balance weather inputs
etr_input_folder = D:\pymetric\gridmet\etr
etr_input_re = (?P<VAR>etr)_(?P<YYYY>\d{4})_daily_(?P<GRID>\w+).img$

## Soil water balance weather inputs
ppt_input_folder = D:\pymetric\gridmet\ppt
ppt_input_re = (?P<VAR>ppt)_(?P<YYYY>\d{4})_daily_(?P<GRID>\w+).img$

## Soil water balance soil input
awc_input_path = D:\pymetric\soils\AWC_WTA_0to10cm_composite.tif

## Soil water balance
swb_spinup_days = 30
swb_min_spinup_days = 5

## Input folder paths
landsat_input_folder = D:\pymetric\landsat

## DEM
dem_input_folder = D:\pymetric\dem\tiles
## First item is latitude, second is longitude (i.e. n39w120.img)
dem_tile_fmt = {}{}.img

## NLCD
nlcd_input_path = D:\pymetric\nlcd\nlcd_2011_landcover_2011_edition_2014_10_10\nlcd_2011_landcover_2011_edition_2014_10_10.img

## Buffer path/row extents by N degrees for selecting DEM tiles and clipping NLCD
tile_buffer = 0.25

## CDL
cdl_input_path = D:\pymetric\cdl\2015_30m_cdls.img
cdl_ag_list = 1-61, 66-77, 204-254
# non_ag_list = 0, 62-65, 81-199

## Landfire
landfire_input_path = D:\pymetric\landfire\US_140_EVT\Grid\us_140evt
landfire_ag_list = 3960-3999

## Fields (for pixel rating only)
field_input_path = D:\pymetric\example\fields\fields_2016_wgs84z11.shp

## Zom remap
zom_remap_path = D:\pymetric\misc\zom_nlcd_default.json

## Output folder paths
dem_output_folder = D:\pymetric\dem
nlcd_output_folder = D:\pymetric\nlcd
cdl_output_folder = D:\pymetric\cdl
landfire_output_folder = D:\pymetric\landfire
field_output_folder = D:\pymetric\fields

## Output file name formats
dem_output_name = dem.img
nlcd_output_fmt = nlcd_{:04d}.img
cdl_output_fmt = cdl_{:04d}.img
cdl_ag_output_fmt = cdl_ag_{:04d}.img
landfire_output_fmt = landfire_{:04d}.img
landfire_ag_output_fmt = landfire_ag_{:04d}.img
field_output_fmt = fields_{:04d}.img

## Script paths
prep_scene_func = D:\pymetric\code\prep_functions\landsat_prep_scene_func.py
metric_model1_func = D:\pymetric\code\metric_functions\metric_model1_func.py
metric_model2_func = D:\pymetric\code\metric_functions\metric_model2_func.py
pixel_rating_func = D:\pymetric\code\metric_functions\pixel_rating_func.py
pixel_points_func = D:\pymetric\code\metric_functions\pixel_points_func.py
monte_carlo_func = D:\pymetric\code\metric_functions\monte_carlo_func.py
interpolate_rasters_func = D:\pymetric\code\interp_functions\interpolate_rasters_func.py
interpolate_tables_func = D:\pymetric\code\interp_functions\interpolate_tables_func.py

## Template input files for scripts
metric_ini = D:\pymetric\code\ini_templates\landsat_metric_inputs.ini
pixel_rating_ini = D:\pymetric\code\ini_templates\landsat_metric_pixel_rating.ini
monte_carlo_ini = D:\pymetric\code\ini_templates\landsat_metric_monte_carlo.ini
interpolate_ini = D:\pymetric\code\ini_templates\landsat_interpolate.ini
